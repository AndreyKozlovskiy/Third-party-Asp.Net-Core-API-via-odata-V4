#pragma checksum "C:\Users\carat\source\repos\CRM_Core\CRM_Core\Views\Home\AddContact.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7957877dd4b84d15670a4d1f11ae99ac91dbd4fc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_AddContact), @"mvc.1.0.view", @"/Views/Home/AddContact.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7957877dd4b84d15670a4d1f11ae99ac91dbd4fc", @"/Views/Home/AddContact.cshtml")]
    public class Views_Home_AddContact : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<CRM_Core.Models.ContactViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\carat\source\repos\CRM_Core\CRM_Core\Views\Home\AddContact.cshtml"
  
    ViewBag.Title = "AddContact";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<h2>AddContact</h2>\r\n\r\n<form method=\"post\"");
            BeginWriteAttribute("action", " action=\"", 129, "\"", 138, 0);
            EndWriteAttribute();
            WriteLiteral(@">
    <div class=""form-group row"">
        <label for=""Name"" class=""col-sm-2 col-form-label"">Name:</label>
        <div class=""col-sm-10"">
            <span style=""color:red"" id=""NameErr""></span>
            <input type=""text"" name=""Name"" class=""form-control"" id=""Name"" placeholder=""Name"">
        </div>
    </div>
    <div class=""form-group row"">
        <label for=""MobilePhone"" class=""col-sm-2 col-form-label"">Mobile Phone:</label>
        <div class=""col-sm-10"">
            <span style=""color:red"" id=""MobilePhoneErr""></span>
            <input type=""text"" name=""MobilePhone"" class=""form-control"" id=""MobilePhone"" placeholder=""Mobile phone"">
        </div>
    </div>
    <div class=""form-group row"">
        <label for=""JobTitle"" class=""col-sm-2 col-form-label"">Job Title:</label>
        <div class=""col-sm-10"">
            <span style=""color:red"" id=""JobTitleErr""></span>
            <input type=""text"" name=""JobTitle"" class=""form-control"" id=""JobTitle"" placeholder=""Job title"">
        </div>
");
            WriteLiteral(@"    </div>
    <div class=""form-group row"">
        <div class=""col-sm-2"">Dear:</div>
        <div class=""col-sm-10"">
            <span style=""color:red"" id=""DearErr""></span>
            <input class=""form-control"" name=""Dear"" placeholder=""Mr./Mrs."" type=""text"" id=""Dear"">
        </div>
    </div>
    <div class=""form-group row"">
        <label for=""BirthDate"" class=""col-sm-2 col-form-label"">Birth Date:</label>
        <div class=""col-10"">
            <span style=""color:red"" id=""BirthDateErr""></span>
            <input class=""form-control"" type=""date"" name=""BirthDate"" id=""BirthDate"">
        </div>
    </div>
    <input type=""button"" class=""btn btn-success"" value=""Add Contact"" id=""addContactButton"" />
    <input style=""opacity:0"" type=""submit"" id=""addContactSubmit"" />
</form>

<script>
    addContactButton.onclick = function (event) {
        let allIsMatch = true;
        let name = document.getElementById('Name').value.trim();

        if (name.length <= 2 || name.length > 50) {
   ");
            WriteLiteral(@"         document.getElementById('NameErr').innerHTML = ""Range of Name 2-50 letter"";
            allIsMatch = false;
        }
        else {
            document.getElementById('NameErr').innerHTML = '';
        }

        let phone = document.getElementById('MobilePhone').value.trim();
        let phoneReg = new RegExp(/^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\s\./0-9]*$/g);
        if (phone.match(phoneReg)) {
            document.getElementById('MobilePhoneErr').innerHTML = '';
        }
        else {
            document.getElementById('MobilePhoneErr').innerHTML = 'Phone doesn\'t match pattern';
             allIsMatch = false;
        }

        let title = document.getElementById('JobTitle').value.trim();
        if (title.length <= 2 || title.length > 50) {
            document.getElementById('JobTitleErr').innerHTML = ""Range of Job 2-50 letter"";
            allIsMatch = false;
        }
        else {
            document.getElementById('JobTitleErr').innerHTML = '';
        }

 ");
            WriteLiteral(@"       let Dear = document.getElementById('Dear').value.trim();
        if (title.length <= 2 || title.length > 50) {
            document.getElementById('DearErr').innerHTML = ""Range of Dear 2-50 letter"";
            allIsMatch = false;
        }
        else {
            document.getElementById('DearErr').innerHTML = '';
        }

        let dateOfBirth = Date.parse(document.getElementById(""BirthDate"").value);
        let currentDate = Date.now();

        if (dateOfBirth > currentDate) {
            allIsMatch = false;
            document.getElementById('BirthDateErr').innerHTML = 'Wrong birth date';
        }
        else {
            document.getElementById('BirthDateErr').innerHTML = '';
        }

        if (allIsMatch) {
            document.getElementById('addContactSubmit').click();
        }
    }
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<CRM_Core.Models.ContactViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
